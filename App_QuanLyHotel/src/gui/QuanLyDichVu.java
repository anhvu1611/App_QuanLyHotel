package gui;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import connectDB.ConnectDB;
import dao.DichVu_DAO;
import dao.Phong_DAO;
import dao.ThuePhong_DAO;
import dao.TienNghi_DAO;
import entity.DichVu;
import entity.Phong;

/**
 *
 * @author Vu
 */
public class QuanLyDichVu extends JPanel {
	private JButton btn_Clear_DichVu;
	private JButton btn_Sua_DichVu;
	private JButton btn_Them_DichVu;
	private JButton btn_Xoa_DichVu;
	private JLabel jLabel1;
	private JPanel jPanel1;
	private JTable jtable_DichVu;
	private JLabel lbl_DonGia_DichVu;
	private JLabel lbl_MaDV_DichVu;
	private JLabel lbl_TenDV_DichVu;
	private JLabel lbl_timkiem_DichVu;
	private JScrollPane scrollPane_DichVu;
	private JTextField txt_DonGia_DichVu;
	private JTextField txt_MaDV_DichVu;
	private JTextField txt_TenDV_DichVu;
	private JTextField txt_TimKiem_DichVu;
	private DichVu_DAO dv_dao;
	private Phong_DAO phong_dao;
	private ThuePhong_DAO thuePhong_dao;
	private TienNghi_DAO tienNghi_dao;
	private DefaultTableModel modelDichVu;

	/**
	 * Creates new form PanelQuanLyDichVu
	 */
	public QuanLyDichVu() {
		KetNoiCSDL();
		initComponents();

	}

	// khởi tạo kết nối đến CSDL
	public void KetNoiCSDL() {
		try {
			ConnectDB.getInstance().connect();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		phong_dao = new Phong_DAO();
		thuePhong_dao = new ThuePhong_DAO();
		tienNghi_dao = new TienNghi_DAO();
		dv_dao = new DichVu_DAO();
	}

	// đọc dữ liệu vào table dịch vụ
	private void loadDichVu() {
		ArrayList<DichVu> listDV = dv_dao.getAllDichVu();
		for (DichVu dv : listDV) {
			modelDichVu.addRow(new Object[] { dv.getMaDichVu(), dv.getTenDichVu(), dv.getDonGiaDichVu() });
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		jLabel1 = new JLabel();
		jPanel1 = new JPanel();
		lbl_MaDV_DichVu = new JLabel();
		txt_MaDV_DichVu = new JTextField();
		lbl_TenDV_DichVu = new JLabel();
		lbl_DonGia_DichVu = new JLabel();
		txt_TenDV_DichVu = new JTextField();
		txt_DonGia_DichVu = new JTextField();
		btn_Them_DichVu = new JButton();
		btn_Sua_DichVu = new JButton();
		btn_Clear_DichVu = new JButton();
		btn_Xoa_DichVu = new JButton();
		scrollPane_DichVu = new JScrollPane();
		jtable_DichVu = new JTable();
		lbl_timkiem_DichVu = new JLabel();
		txt_TimKiem_DichVu = new JTextField();

		jLabel1.setFont(new Font("Segoe UI", 1, 36)); // NOI18N
		jLabel1.setText("Danh mục dịch vụ");

		jPanel1.setBorder(
				BorderFactory.createTitledBorder(null, "Thông tin dịch vụ", javax.swing.border.TitledBorder.CENTER,
						javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

		lbl_MaDV_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
		lbl_MaDV_DichVu.setText("Mã dịch vụ: ");

		txt_MaDV_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N

		lbl_TenDV_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
		lbl_TenDV_DichVu.setText("Tên dịch vụ:");

		lbl_DonGia_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
		lbl_DonGia_DichVu.setText("Đơn giá: ");

		txt_TenDV_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N

		txt_DonGia_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N

		// tooltip các nút chức năng của quan lý dịch vụ
		btn_Them_DichVu.setToolTipText("Atl + A");
		btn_Xoa_DichVu.setToolTipText("Atl + R");
		btn_Sua_DichVu.setToolTipText("Atl + U");
		btn_Clear_DichVu.setToolTipText("Atl + C");

		// sử dụng phím tắt
		btn_Them_DichVu.setMnemonic(KeyEvent.VK_A);
		btn_Xoa_DichVu.setMnemonic(KeyEvent.VK_R);
		btn_Sua_DichVu.setMnemonic(KeyEvent.VK_U);
		btn_Clear_DichVu.setMnemonic(KeyEvent.VK_C);

		// thêm dịch vụ
		btn_Them_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
		btn_Them_DichVu.setIcon(new ImageIcon("item//add-24.png")); // NOI18N
		btn_Them_DichVu.setText("Thêm");
		btn_Them_DichVu.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				if (validDataDichVu()) {
					DichVu dv = TaoMoiDV();
					if (dv_dao.themDichVu(dv) == true) {
						modelDichVu.addRow(new Object[] { dv.getMaDichVu(), dv.getTenDichVu(), dv.getDonGiaDichVu() });
						clearDichVu();
						JOptionPane.showMessageDialog(null, "Thêm thành công");

					} else {
						JOptionPane.showMessageDialog(null, "Trùng mã dịch vụ");
						txt_MaDV_DichVu.requestFocus();
						txt_MaDV_DichVu.setBorder(bdFalse);
					}
				}

			}
		});

		// sửa dịch vụ
		btn_Sua_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
		btn_Sua_DichVu.setIcon(new ImageIcon("item//update-24.png")); // NOI18N
		btn_Sua_DichVu.setText("Cập nhật");
		btn_Sua_DichVu.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				int row = jtable_DichVu.getSelectedRow();
				if (row < 0)
					JOptionPane.showMessageDialog(null, "Vui lòng chọn dịch vụ muốn cập nhật!!!");
				else {
					String ma = txt_MaDV_DichVu.getText();
					String ten = txt_TenDV_DichVu.getText();
					float gia = Float.parseFloat(txt_DonGia_DichVu.getText());

					DichVu dv = new DichVu(ma, ten, gia);

					int choice = JOptionPane.showConfirmDialog(null, "Ban có chắc chắn muốn cập nhật không ?");
					if (choice == JOptionPane.YES_OPTION) {
						modelDichVu.setValueAt(dv.getTenDichVu(), row, 1);
						modelDichVu.setValueAt(dv.getDonGiaDichVu(), row, 2);
						try {
							dv_dao.capNhat_DichVu(dv);
						} catch (Exception e1) {
							e1.printStackTrace();
						}
						clearDichVu();
						JOptionPane.showMessageDialog(null, "Cập nhật hoàn tất!");
					} else {
						JOptionPane.showMessageDialog(null, "Error!");
					}
				}
			}
		});

		// xóa trắng
		btn_Clear_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
		btn_Clear_DichVu.setIcon(new ImageIcon("item//refresh-24.png")); // NOI18N
		btn_Clear_DichVu.setText("Làm mới");
		btn_Clear_DichVu.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				clearDichVu();

			}
		});

		// xóa dịch vụ
		btn_Xoa_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
		btn_Xoa_DichVu.setIcon(new ImageIcon("item//remove-24.png")); // NOI18N
		btn_Xoa_DichVu.setText("Xóa");
		btn_Xoa_DichVu.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if (jtable_DichVu.getSelectedRowCount() == 0) {
					JOptionPane.showMessageDialog(null, "Vui lòng chọn dòng cần xóa");
				} else {
					int choose = jtable_DichVu.getSelectedRow();
					DichVu dv = dv_dao.getAllDichVu().get(choose);
					String ma = dv.getMaDichVu();
					if ((JOptionPane.showConfirmDialog(null,
							"Bạn có chắc muốn xóa dịch vụ " + dv.getTenDichVu() + " không?", "Lựa chọn",
							JOptionPane.YES_NO_OPTION)) == JOptionPane.YES_OPTION) {
						// xóa trong table model
						modelDichVu.removeRow(choose);
						// xóa trong ArrayList
						try {
							dv_dao.deleteDichVu(ma);
						} catch (Exception e1) {
							e1.printStackTrace();
						}
						clearDichVu();
						JOptionPane.showMessageDialog(null, "Xóa thành công!!!!");
					}
				}

			}
		});
		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(41, 41, 41)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addGroup(jPanel1Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(lbl_TenDV_DichVu, javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(lbl_MaDV_DichVu, javax.swing.GroupLayout.DEFAULT_SIZE, 99,
														Short.MAX_VALUE)
												.addComponent(lbl_DonGia_DichVu,
														javax.swing.GroupLayout.Alignment.TRAILING,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(jPanel1Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(txt_MaDV_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE,
														190, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(txt_TenDV_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE,
														190, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(txt_DonGia_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE,
														190, javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout
										.createSequentialGroup()
										.addGroup(jPanel1Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(btn_Them_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE,
														114, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(btn_Clear_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE,
														114, javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addGroup(jPanel1Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(btn_Sua_DichVu, javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(btn_Xoa_DichVu, javax.swing.GroupLayout.DEFAULT_SIZE, 120,
														Short.MAX_VALUE))))
						.addContainerGap(41, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(32, 32, 32)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lbl_MaDV_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 41,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txt_MaDV_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(27, 27, 27)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lbl_TenDV_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 32,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txt_TenDV_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(32, 32, 32)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lbl_DonGia_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 37,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txt_DonGia_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(53, 53, 53)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(btn_Them_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 38,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btn_Sua_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 38,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(35, 35, 35)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(btn_Clear_DichVu, javax.swing.GroupLayout.DEFAULT_SIZE, 44,
										Short.MAX_VALUE)
								.addComponent(btn_Xoa_DichVu, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addContainerGap(34, Short.MAX_VALUE)));

		jtable_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
		String[] colsDV = { "Mã dịch vụ", "Tên dịch vụ", "Đơn giá" };
		modelDichVu = new DefaultTableModel(colsDV, 0);
		jtable_DichVu = new JTable(modelDichVu);
		scrollPane_DichVu.setViewportView(jtable_DichVu);
		jtable_DichVu.addMouseListener(new MouseListener() {

			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub
				int pos = jtable_DichVu.getSelectedRow();
				txt_MaDV_DichVu.setText(modelDichVu.getValueAt(pos, 0).toString());
				txt_TenDV_DichVu.setText(modelDichVu.getValueAt(pos, 1).toString());
				txt_DonGia_DichVu.setText(modelDichVu.getValueAt(pos, 2).toString());

			}
		}

		);
		loadDichVu();

		lbl_timkiem_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
		lbl_timkiem_DichVu.setText("Tìm kiếm dịch vụ: ");

		txt_TimKiem_DichVu.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
		txt_TimKiem_DichVu.addKeyListener(new KeyAdapter() {
			@Override
			public void keyReleased(KeyEvent e) {
				String text = txt_TimKiem_DichVu.getText().toLowerCase();
				TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(modelDichVu);
				jtable_DichVu.setRowSorter(sorter);
				sorter.setRowFilter(RowFilter.regexFilter(text));
				if (text.trim().length() == 0) {
					sorter.setRowFilter(null);
				} else {
					sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
					modelDichVu.setRowCount(0);
					loadDichVu();
				}
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(80, 80, 80)
								.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(71, 71, 71)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addGroup(layout.createSequentialGroup().addComponent(lbl_timkiem_DichVu)
												.addGap(18, 18, 18).addComponent(txt_TimKiem_DichVu))
										.addComponent(scrollPane_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 663,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGroup(layout.createSequentialGroup().addGap(476, 476, 476).addComponent(jLabel1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
				.addContainerGap(88, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(18, 18, 18).addComponent(jLabel1).addGap(64, 64, 64)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
								.addGap(10, 10, 10)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(lbl_timkiem_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 25,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(txt_TimKiem_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(
										scrollPane_DichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
				.addContainerGap(67, Short.MAX_VALUE)));
	}// </editor-fold>//GEN-END:initComponents

	private void clearDichVu() {
		txt_MaDV_DichVu.setText("");
		txt_TenDV_DichVu.setText("");
		txt_DonGia_DichVu.setText("");
		txt_MaDV_DichVu.setBorder(null);
		txt_TenDV_DichVu.setBorder(null);
		txt_DonGia_DichVu.setBorder(null);
		txt_MaDV_DichVu.requestFocus();
	}

	// tạo một dịch vụ mới
	private DichVu TaoMoiDV() {
		String ma = txt_MaDV_DichVu.getText();
		String ten = txt_TenDV_DichVu.getText();
		float gia = Float.parseFloat(txt_DonGia_DichVu.getText());
		return new DichVu(ma, ten, gia);
	}

	Border bdFalse = BorderFactory.createLineBorder(Color.red);
	Border bdTrue = BorderFactory.createLineBorder(Color.green);

	private boolean validDataDichVu() {
		// TODO Auto-generated method stub
		String ma = txt_MaDV_DichVu.getText().trim();
		String ten = txt_TenDV_DichVu.getText().trim();
		String gia = txt_DonGia_DichVu.getText().trim();
		// check mã dịch vụ
		if (ma.equals("")) {
			JOptionPane.showMessageDialog(this, "Error: Chưa nhập mã dịch vụ!");
			txt_MaDV_DichVu.setBorder(bdFalse);
			txt_MaDV_DichVu.requestFocus(true);
			return false;
		} else {
			if (!ma.matches("DV\\d{2,}")) {
				JOptionPane.showMessageDialog(this,
						"Error: Mã dịch vụ phải chứa \"DV\" và kèm ít nhất 2 số ở đằng sau!");
				txt_MaDV_DichVu.requestFocus(true);
				txt_MaDV_DichVu.setBorder(bdFalse);
				return false;
			} else {
				txt_MaDV_DichVu.setBorder(bdTrue);
			}
		}

		// check tên dịch vụ
		if (ten.equals("")) {
			JOptionPane.showMessageDialog(this, "Error: Chưa nhập tên dịch vụ!");
			txt_TenDV_DichVu.setBorder(bdFalse);
			txt_TenDV_DichVu.requestFocus(true);
			return false;
		} else {
			if (!ten.matches("([a-zA-Z]+(\\s)*)+")) {
				JOptionPane.showMessageDialog(this, "Error: Tên dịch vụ không chứa số và kí tự đặc biệt!");
				txt_TenDV_DichVu.requestFocus(true);
				txt_TenDV_DichVu.setBorder(bdFalse);
				return false;
			} else {
				txt_TenDV_DichVu.setBorder(bdTrue);
			}
		}
		// Check gia phòng
		if (gia.equals("")) {
			JOptionPane.showMessageDialog(this, "Error: Chưa nhập giá!");
			txt_DonGia_DichVu.requestFocus(true);
			txt_DonGia_DichVu.setBorder(bdFalse);
			return false;
		} else {
			if (!gia.matches("\\d+")) {
				JOptionPane.showMessageDialog(this, "Error: Giá dịch vụ phải là số và không âm!");
				txt_DonGia_DichVu.requestFocus(true);
				txt_DonGia_DichVu.setBorder(bdFalse);
				return false;
			} else {
				txt_DonGia_DichVu.setBorder(bdTrue);
			}
		}
		return true;

	}

}
